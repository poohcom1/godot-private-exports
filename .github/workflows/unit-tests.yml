name: unit-tests
run-name: ${{ github.head_ref || github.ref_name }}-unit-tests

on:
  push:
  workflow_dispatch:

jobs:
  unit-test:
    strategy:
      fail-fast: false
      matrix:
        godot-version: ["4.2dev5"] # Insert here the Godot version you want to run your tests with

    name: "CI Unit Test 🐧 v${{ matrix.godot-version }}"
    runs-on: "ubuntu-22.04"
    timeout-minutes: 10 # The overall timeout

    steps:
      - name: "Checkout your Repository"
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: "🐧Download and Install Godot ${{ matrix.godot-version }}"
        continue-on-error: false
        shell: bash
        run: |
          GODOT_HOME=$HOME/bin
          GODOT_BIN=$GODOT_HOME/godot
          mkdir -p $GODOT_HOME
          chmod 770 $GODOT_HOME
          GODOT_CONF_PATH=$HOME/.config/godot
          if [ ! -d $GODOT_CONF_PATH ]; then
            mkdir -p $GODOT_CONF_PATH
            chmod 770 $GODOT_CONF_PATH
          fi

          GODOT_PACKAGE=Godot_v4.2-dev5_linux.x86_64
          wget https://downloads.tuxfamily.org/godotengine/4.2/dev5/Godot_v4.2-dev5_linux.x86_64.zip -P ${{ runner.temp }}
          unzip ${{ runner.temp }}/Godot_v4.2-dev5_linux.x86_64.zip -d $GODOT_HOME
          mv $GODOT_HOME/$GODOT_PACKAGE $GODOT_BIN
          chmod u+x $GODOT_BIN
          echo "GODOT_HOME=$GODOT_HOME" >> "$GITHUB_ENV"
          echo "GODOT_BIN=$GODOT_BIN" >> "$GITHUB_ENV"

      # We need to update the project before running tests, Godot has actually issues with loading the plugin
      - name: "Update Project"
        if: ${{ !cancelled() }}
        timeout-minutes: 1
        continue-on-error: true # we still ignore the timeout, the script is not quit and we run into a timeout
        shell: bash
        run: |
          ${{ env.GODOT_BIN }} -e --path . -s res://addons/gdUnit4/bin/ProjectScanner.gd --headless --audio-driver Dummy

      - name: "Run Unit Tests"
        if: ${{ !cancelled() }}
        timeout-minutes: 8 # set your expected test timeout
        env:
          GODOT_BIN: ${{ env.GODOT_BIN }}
        shell: bash
        run: |
          chmod +x ./addons/gdUnit4/runtest.sh
          xvfb-run --auto-servernum ./addons/gdUnit4/runtest.sh --add "res://test" --audio-driver Dummy --display-driver x11 --rendering-driver opengl3 --screen 0 --continue


  finalize:
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    name: Final Results
    needs: [unit-test]
    steps:
      - run: exit 1
        if: >-
          ${{
              contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
          }}
